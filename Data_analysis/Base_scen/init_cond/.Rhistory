lf <- as.data.frame( do.call( cbind, lf ) )
colnames( lf ) <- varList[ order( varList ) ]
eqs <- sfcr_set(
gss ~ (1 + gk) * (1 + inf) - 1,
Y ~ yp * u,
yp ~ K / ( nu * ( 1 + gk ) ),
uT ~ u - 0.02,
A ~ (u * K + nu * RD * (1 + gk) )/( nu * Nf ),
RD ~ gamma * S /(1 + gk),
S ~ Y - ( INV * gk )/( 1 + gk ),
INV ~ iota * S,
C ~ S - I - G,
I ~ h * Y,
G ~ ( Gamma0 * K ) / ( 1 + gk ),
L ~ lev * Assets,
p ~ ( Assets - Df ) / ( r * K + INV / ( 1 + theta ) ),
ucf ~ p / ( 1 + theta ),
w ~ ucf * A,
piG ~ p * S - w * Nf  - ibk * L / ( 1 + gss ),
DepKN ~ ( nk * p * K * r ) / ( 1 + gss ),
piN ~ piG + ( gss * ucf * INV ) / (1 + gss) - DepKN,
ra ~ ( gss * sumAm ) / ( lambda - sumAm ),
sumAm ~ sum( ( 1 / ( 1 + gss ) ) ^ ( 1 : lambda ) ),
AM ~ ( gss + ra ) / ( lambda * (1 + gss) ) * L * sumAm,
Df ~ ( p * I + w * Nf - AM - L * gss / ( 1 + gss ) ) * ( 1 + gss ),
piDF ~ gss * ( L - Df ) / ( 1 + gss ) + piG - tau2 * piN - p * I,
piB ~ ( ibk * L + i * Bb ) / ( 1 + gss ),
piDB ~ etab * (1 - tau2 ) * piB,
etaf ~ piDF / ( ( 1 - tau2 ) * piN  ),
nwB ~ ( ( 1 - tau2 ) * piB - piDB ) * ( 1 + gss ) / gss,
B ~ gDebtGDP * p * Y,
Bh ~ shareGDebtHH * B,
Bb ~ B - Bh,
Dh ~ L - Df + Bb - nwB,
spread ~ ibk - i,
tau1 ~ ( p * G - tau2 * ( piB + piN ) - B * ( gss - i ) / ( 1 + gss ) ) / ( w * Nf + piDF + piDB + i * Bh / ( 1 + gss ) ),
V ~ Dh + Bh,
beta ~ Dh / V,
alpha2 ~ ( p * C - alpha1 * ( 1 - tau1 ) * w * Nf ) * ( 1 + gss ) / V
)
external <- sfcr_set(
gk ~ lf$gk,
inf ~ lf$inf,
u ~ lf$u,
K ~ lf$K,
nu ~ 1.5,
Nf ~ 92000,
gamma ~ 0.03,
iota ~ 0.2,
h ~ 0.168,
Gamma0 ~ 0.17,
lev ~ 0.3,
Assets ~ 100000,
r ~ 0.956,
theta ~ 0.45,
nk ~ 0.068,
ibk ~ 0.055,
lambda ~ 10,
tau2 ~ 0.35,
i ~ 0.025,
etab ~ 0.9,
gDebtGDP ~ 0.5,
shareGDebtHH ~ 0.7,
alpha1 ~ 1
)
sim <- sfcr_baseline(
equations = eqs,
external = external,
periods = 60,
method = 'Gauss'
)
save( sim, file = 'teste.RData' )
sim$Y
library(sfcr)
# Model initial condition
varList     <- c( "gk", "inf", "u", "K", "nu", "Nf", "gamma", "iota", "h", "Gamma0", "lev", "Assets",
"r", "theta", "nk", "ibk", "lambda", "tau2", "i", "etab", "gDebtGDP", "shareGDebtHH", "alpha1" )
varListTxt  <- paste0( varList, ".txt" )
tmpFiles    <- list.files( )
tmpFiles    <- tmpFiles[ tmpFiles %in% varListTxt ]
lf <- list( )
for( i in 1 : length( tmpFiles ) ){
lf[[i]] <- as.numeric( read.table( tmpFiles[ i ] ) )
}
lf <- as.data.frame( do.call( cbind, lf ) )
colnames( lf ) <- varList[ order( varList ) ]
eqs <- sfcr_set(
gss ~ (1 + gk) * (1 + inf) - 1,
Y ~ yp * u,
yp ~ K / ( nu * ( 1 + gk ) ),
uT ~ u - 0.02,
A ~ (u * K + nu * RD * (1 + gk) )/( nu * Nf ),
RD ~ gamma * S /(1 + gk),
S ~ Y - ( INV * gk )/( 1 + gk ),
INV ~ iota * S,
C ~ S - I - G,
I ~ h * Y,
G ~ ( Gamma0 * K ) / ( 1 + gk ),
L ~ lev * Assets,
p ~ ( Assets - Df ) / ( r * K + INV / ( 1 + theta ) ),
ucf ~ p / ( 1 + theta ),
w ~ ucf * A,
piG ~ p * S - w * Nf  - ibk * L / ( 1 + gss ),
DepKN ~ ( nk * p * K * r ) / ( 1 + gss ),
piN ~ piG + ( gss * ucf * INV ) / (1 + gss) - DepKN,
ra ~ ( gss * sumAm ) / ( lambda - sumAm ),
sumAm ~ sum( ( 1 / ( 1 + gss ) ) ^ ( 1 : lambda ) ),
AM ~ ( gss + ra ) / ( lambda * (1 + gss) ) * L * sumAm,
Df ~ ( p * I + w * Nf - AM - L * gss / ( 1 + gss ) ) * ( 1 + gss ),
piDF ~ gss * ( L - Df ) / ( 1 + gss ) + piG - tau2 * piN - p * I,
piB ~ ( ibk * L + i * Bb ) / ( 1 + gss ),
piDB ~ etab * (1 - tau2 ) * piB,
etaf ~ piDF / ( ( 1 - tau2 ) * piN  ),
nwB ~ ( ( 1 - tau2 ) * piB - piDB ) * ( 1 + gss ) / gss,
B ~ gDebtGDP * p * Y,
Bh ~ shareGDebtHH * B,
Bb ~ B - Bh,
Dh ~ L - Df + Bb - nwB,
spread ~ ibk - i,
tau1 ~ ( p * G - tau2 * ( piB + piN ) - B * ( gss - i ) / ( 1 + gss ) ) / ( w * Nf + piDF + piDB + i * Bh / ( 1 + gss ) ),
V ~ Dh + Bh,
beta ~ Dh / V,
alpha2 ~ ( p * C - alpha1 * ( 1 - tau1 ) * w * Nf ) * ( 1 + gss ) / V
)
external <- sfcr_set(
gk ~ lf$gk,
inf ~ lf$inf,
u ~ lf$u,
K ~ lf$K,
nu ~ 1.5,
Nf ~ 92000,
gamma ~ 0.03,
iota ~ 0.2,
h ~ 0.168,
Gamma0 ~ 0.17,
lev ~ 0.3,
Assets ~ 100000,
r ~ 0.956,
theta ~ 0.45,
nk ~ 0.068,
ibk ~ 0.055,
lambda ~ 10,
tau2 ~ 0.35,
i ~ 0.025,
etab ~ 0.9,
gDebtGDP ~ 0.5,
shareGDebtHH ~ 0.7,
alpha1 ~ 1
)
sim <- sfcr_baseline(
equations = eqs,
external = external,
periods = 60,
method = 'Gauss'
)
save( sim, file = 'teste.RData' )
sim$Y
library(sfcr)
# Model initial condition
varList     <- c( "gk", "inf", "u", "K", "nu", "Nf", "gamma", "iota", "h", "Gamma0", "lev", "Assets",
"r", "theta", "nk", "ibk", "lambda", "tau2", "i", "etab", "gDebtGDP", "shareGDebtHH", "alpha1" )
varListTxt  <- paste0( varList, ".txt" )
tmpFiles    <- list.files( )
tmpFiles    <- tmpFiles[ tmpFiles %in% varListTxt ]
lf <- list( )
for( i in 1 : length( tmpFiles ) ){
lf[[i]] <- as.numeric( read.table( tmpFiles[ i ] ) )
}
lf <- as.data.frame( do.call( cbind, lf ) )
colnames( lf ) <- varList[ order( varList ) ]
eqs <- sfcr_set(
gss ~ (1 + gk) * (1 + inf) - 1,
Y ~ yp * u,
yp ~ K / ( nu * ( 1 + gk ) ),
uT ~ u - 0.02,
A ~ (u * K + nu * RD * (1 + gk) )/( nu * Nf ),
RD ~ gamma * S /(1 + gk),
S ~ Y - ( INV * gk )/( 1 + gk ),
INV ~ iota * S,
C ~ S - I - G,
I ~ h * Y,
G ~ ( Gamma0 * K ) / ( 1 + gk ),
L ~ lev * Assets,
p ~ ( Assets - Df ) / ( r * K + INV / ( 1 + theta ) ),
ucf ~ p / ( 1 + theta ),
w ~ ucf * A,
piG ~ p * S - w * Nf  - ibk * L / ( 1 + gss ),
DepKN ~ ( nk * p * K * r ) / ( 1 + gss ),
piN ~ piG + ( gss * ucf * INV ) / (1 + gss) - DepKN,
ra ~ ( gss * sumAm ) / ( lambda - sumAm ),
sumAm ~ sum( ( 1 / ( 1 + gss ) ) ^ ( 1 : lambda ) ),
AM ~ ( gss + ra ) / ( lambda * (1 + gss) ) * L * sumAm,
Df ~ ( p * I + w * Nf - AM - L * gss / ( 1 + gss ) ) * ( 1 + gss ),
piDF ~ gss * ( L - Df ) / ( 1 + gss ) + piG - tau2 * piN - p * I,
piB ~ ( ibk * L + i * Bb ) / ( 1 + gss ),
piDB ~ etab * (1 - tau2 ) * piB,
etaf ~ piDF / ( ( 1 - tau2 ) * piN  ),
nwB ~ ( ( 1 - tau2 ) * piB - piDB ) * ( 1 + gss ) / gss,
B ~ gDebtGDP * p * Y,
Bh ~ shareGDebtHH * B,
Bb ~ B - Bh,
Dh ~ L - Df + Bb - nwB,
spread ~ ibk - i,
tau1 ~ ( p * G - tau2 * ( piB + piN ) - B * ( gss - i ) / ( 1 + gss ) ) / ( w * Nf + piDF + piDB + i * Bh / ( 1 + gss ) ),
V ~ Dh + Bh,
beta ~ Dh / V,
alpha2 ~ ( p * C - alpha1 * ( 1 - tau1 ) * w * Nf ) * ( 1 + gss ) / V
)
external <- sfcr_set(
gk ~ lf$gk,
inf ~ lf$inf,
u ~ lf$u,
K ~ lf$K,
nu ~ lf$nu,
Nf ~ lf$Nf,
gamma ~ lf$gamma,
iota ~ lf$iota,
h ~ lf$h,
Gamma0 ~ lf$Gamma0,
lev ~ lf$lev,
Assets ~ lf$Assets,
r ~ lf$r,
theta ~ lf$theta,
nk ~ lf$nk,
ibk ~ lf$ibk,
lambda ~ lf$lambda,
tau2 ~ 0.35,
i ~ 0.025,
etab ~ 0.9,
gDebtGDP ~ 0.5,
shareGDebtHH ~ 0.7,
alpha1 ~ 1
)
sim <- sfcr_baseline(
equations = eqs,
external = external,
periods = 60,
method = 'Gauss'
)
save( sim, file = 'teste.RData' )
sim$Y
library(sfcr)
# Model initial condition
varList     <- c( "gk", "inf", "u", "K", "nu", "Nf", "gamma", "iota", "h", "Gamma0", "lev", "Assets",
"r", "theta", "nk", "ibk", "lambda", "tau2", "i", "etab", "gDebtGDP", "shareGDebtHH", "alpha1" )
varListTxt  <- paste0( varList, ".txt" )
tmpFiles    <- list.files( )
tmpFiles    <- tmpFiles[ tmpFiles %in% varListTxt ]
lf <- list( )
for( i in 1 : length( tmpFiles ) ){
lf[[i]] <- as.numeric( read.table( tmpFiles[ i ] ) )
}
lf <- as.data.frame( do.call( cbind, lf ) )
colnames( lf ) <- varList[ order( varList ) ]
eqs <- sfcr_set(
gss ~ (1 + gk) * (1 + inf) - 1,
Y ~ yp * u,
yp ~ K / ( nu * ( 1 + gk ) ),
uT ~ u - 0.02,
A ~ (u * K + nu * RD * (1 + gk) )/( nu * Nf ),
RD ~ gamma * S /(1 + gk),
S ~ Y - ( INV * gk )/( 1 + gk ),
INV ~ iota * S,
C ~ S - I - G,
I ~ h * Y,
G ~ ( Gamma0 * K ) / ( 1 + gk ),
L ~ lev * Assets,
p ~ ( Assets - Df ) / ( r * K + INV / ( 1 + theta ) ),
ucf ~ p / ( 1 + theta ),
w ~ ucf * A,
piG ~ p * S - w * Nf  - ibk * L / ( 1 + gss ),
DepKN ~ ( nk * p * K * r ) / ( 1 + gss ),
piN ~ piG + ( gss * ucf * INV ) / (1 + gss) - DepKN,
ra ~ ( gss * sumAm ) / ( lambda - sumAm ),
sumAm ~ sum( ( 1 / ( 1 + gss ) ) ^ ( 1 : lambda ) ),
AM ~ ( gss + ra ) / ( lambda * (1 + gss) ) * L * sumAm,
Df ~ ( p * I + w * Nf - AM - L * gss / ( 1 + gss ) ) * ( 1 + gss ),
piDF ~ gss * ( L - Df ) / ( 1 + gss ) + piG - tau2 * piN - p * I,
piB ~ ( ibk * L + i * Bb ) / ( 1 + gss ),
piDB ~ etab * (1 - tau2 ) * piB,
etaf ~ piDF / ( ( 1 - tau2 ) * piN  ),
nwB ~ ( ( 1 - tau2 ) * piB - piDB ) * ( 1 + gss ) / gss,
B ~ gDebtGDP * p * Y,
Bh ~ shareGDebtHH * B,
Bb ~ B - Bh,
Dh ~ L - Df + Bb - nwB,
spread ~ ibk - i,
tau1 ~ ( p * G - tau2 * ( piB + piN ) - B * ( gss - i ) / ( 1 + gss ) ) / ( w * Nf + piDF + piDB + i * Bh / ( 1 + gss ) ),
V ~ Dh + Bh,
beta ~ Dh / V,
alpha2 ~ ( p * C - alpha1 * ( 1 - tau1 ) * w * Nf ) * ( 1 + gss ) / V
)
external <- sfcr_set(
gk ~ lf$gk,
inf ~ lf$inf,
u ~ lf$u,
K ~ lf$K,
nu ~ lf$nu,
Nf ~ lf$Nf,
gamma ~ lf$gamma,
iota ~ lf$iota,
h ~ lf$h,
Gamma0 ~ lf$Gamma0,
lev ~ lf$lev,
Assets ~ lf$Assets,
r ~ lf$r,
theta ~ lf$theta,
nk ~ lf$nk,
ibk ~ lf$ibk,
lambda ~ lf$lambda,
tau2 ~ lf$tau2,
i ~ lf$i,
etab ~ lf$etab,
gDebtGDP ~ lf$gDebtGDP,
shareGDebtHH ~ lf$shareGDebtHH,
alpha1 ~ lf$alpha1
)
sim <- sfcr_baseline(
equations = eqs,
external = external,
periods = 60,
method = 'Gauss'
)
save( sim, file = 'teste.RData' )
sim$Y
library(sfcr)
# Model initial condition
varList     <- c( "gk", "inf", "u", "K", "nu", "Nf", "gamma", "iota", "h", "Gamma0", "lev", "Assets",
"r", "theta", "nk", "ibk", "lambda", "tau2", "i", "etab", "gDebtGDP", "shareGDebtHH", "alpha1" )
varListTxt  <- paste0( varList, ".txt" )
tmpFiles    <- list.files( )
tmpFiles    <- tmpFiles[ tmpFiles %in% varListTxt ]
lf <- list( )
for( i in 1 : length( tmpFiles ) ){
lf[[i]] <- as.numeric( read.table( tmpFiles[ i ] ) )
}
lf <- as.data.frame( do.call( cbind, lf ) )
colnames( lf ) <- varList[ order( varList ) ]
eqs <- sfcr_set(
gss ~ (1 + gk) * (1 + inf) - 1,
Y ~ yp * u,
yp ~ K / ( nu * ( 1 + gk ) ),
uT ~ u - 0.02,
A ~ (u * K + nu * RD * (1 + gk) )/( nu * Nf ),
RD ~ gamma * S /(1 + gk),
S ~ Y - ( INV * gk )/( 1 + gk ),
INV ~ iota * S,
C ~ S - I - G,
I ~ h * Y,
G ~ ( Gamma0 * K ) / ( 1 + gk ),
L ~ lev * Assets,
p ~ ( Assets - Df ) / ( r * K + INV / ( 1 + theta ) ),
ucf ~ p / ( 1 + theta ),
w ~ ucf * A,
piG ~ p * S - w * Nf  - ibk * L / ( 1 + gss ),
DepKN ~ ( nk * p * K * r ) / ( 1 + gss ),
piN ~ piG + ( gss * ucf * INV ) / (1 + gss) - DepKN,
ra ~ ( gss * sumAm ) / ( lambda - sumAm ),
sumAm ~ sum( ( 1 / ( 1 + gss ) ) ^ ( 1 : lambda ) ),
AM ~ ( gss + ra ) / ( lambda * (1 + gss) ) * L * sumAm,
Df ~ ( p * I + w * Nf - AM - L * gss / ( 1 + gss ) ) * ( 1 + gss ),
piDF ~ gss * ( L - Df ) / ( 1 + gss ) + piG - tau2 * piN - p * I,
piB ~ ( ibk * L + i * Bb ) / ( 1 + gss ),
piDB ~ etab * (1 - tau2 ) * piB,
etaf ~ piDF / ( ( 1 - tau2 ) * piN  ),
nwB ~ ( ( 1 - tau2 ) * piB - piDB ) * ( 1 + gss ) / gss,
B ~ gDebtGDP * p * Y,
Bh ~ shareGDebtHH * B,
Bb ~ B - Bh,
Dh ~ L - Df + Bb - nwB,
spread ~ ibk - i,
tau1 ~ ( p * G - tau2 * ( piB + piN ) - B * ( gss - i ) / ( 1 + gss ) ) / ( w * Nf + piDF + piDB + i * Bh / ( 1 + gss ) ),
V ~ Dh + Bh,
beta ~ Dh / V,
alpha2 ~ ( p * C - alpha1 * ( 1 - tau1 ) * w * Nf ) * ( 1 + gss ) / V
)
external <- sfcr_set(
gk ~ lf$gk,
inf ~ lf$inf,
u ~ lf$u,
K ~ lf$K,
nu ~ lf$nu,
Nf ~ lf$Nf,
gamma ~ lf$gamma,
iota ~ lf$iota,
h ~ lf$h,
Gamma0 ~ lf$Gamma0,
lev ~ lf$lev,
Assets ~ lf$Assets,
r ~ lf$r,
theta ~ lf$theta,
nk ~ lf$nk,
ibk ~ lf$ibk,
lambda ~ lf$lambda,
tau2 ~ lf$tau2,
i ~ lf$i,
etab ~ lf$etab,
gDebtGDP ~ lf$gDebtGDP,
shareGDebtHH ~ lf$shareGDebtHH,
alpha1 ~ lf$alpha1
)
sim <- sfcr_baseline(
equations = eqs,
external = external,
periods = 2,
method = 'Gauss'
)
save( sim, file = 'teste.RData' )
sim$Y
sim$alpha2
load("/home/italo/LSD/Work/model_jeec/Initial_Conditions/teste.RData")
load("/home/italo/LSD/Work/model_jeec/Initial_Conditions/teste.RData")
load("/home/italo/LSD/Work/model_jeec/Backup/02012021/Initial_Conditions/teste.RData")
load("/home/italo/LSD/Work/model_jeec/Initial_Conditions/teste.RData")
load("/home/italo/LSD/Work/model_jeec/Initial_Conditions/teste.RData")
load("/home/italo/LSD/Work/model_jeec/Initial_Conditions/teste.RData")
#!/usr/bin/env Rscript
args = commandArgs( trailingOnly =  TRUE )
library(sfcr)
# Model initial condition
varList     <- c( "gk", "inf", "u", "K", "nu", "Nf", "gamma", "iota", "h", "Gamma0", "lev", "Assets",
"r", "theta", "nk", "ibk", "lambda", "tau2", "i", "etab", "gDebtGDP", "shareGDebtHH", "alpha1" )
varListTxt  <- paste0( varList, ".txt" )
tmpFiles    <- list.files( )
tmpFiles    <- tmpFiles[ tmpFiles %in% varListTxt ]
lf <- list( )
for( i in 1 : length( tmpFiles ) ){
lf[[i]] <- as.numeric( read.table( tmpFiles[ i ] ) )
}
lf <- as.data.frame( do.call( cbind, lf ) )
colnames( lf ) <- varList[ order( varList ) ]
eqs <- sfcr_set(
gss ~ (1 + gk) * (1 + inf) - 1,
Y ~ yp * u,
yp ~ K / ( nu * ( 1 + gk ) ),
uT ~ u - 0.02,
A ~ (u * K + nu * RD * (1 + gk) )/( nu * Nf ),
RD ~ gamma * S /(1 + gk),
S ~ Y - ( INV * gk )/( 1 + gk ),
INV ~ iota * S,
C ~ S - I - G,
I ~ h * Y,
G ~ ( Gamma0 * K ) / ( 1 + gk ),
L ~ lev * Assets,
p ~ ( Assets - Df ) / ( r * K + INV / ( 1 + theta ) ),
ucf ~ p / ( 1 + theta ),
w ~ ucf * A,
piG ~ p * S - w * Nf  - ibk * L / ( 1 + gss ),
DepKN ~ ( nk * p * K * r ) / ( 1 + gss ),
piN ~ piG + ( gss * ucf * INV ) / (1 + gss) - DepKN,
ra ~ ( gss * sumAm ) / ( lambda - sumAm ),
sumAm ~ sum( ( 1 / ( 1 + gss ) ) ^ ( 1 : lambda ) ),
AM ~ ( gss + ra ) / ( lambda * (1 + gss) ) * L * sumAm,
Df ~ ( p * I + w * Nf - AM - L * gss / ( 1 + gss ) ) * ( 1 + gss ),
piDF ~ gss * ( L - Df ) / ( 1 + gss ) + piG - tau2 * piN - p * I,
piB ~ ( ibk * L + i * Bb ) / ( 1 + gss ),
piDB ~ etab * (1 - tau2 ) * piB,
etaf ~ piDF / ( ( 1 - tau2 ) * piN  ),
nwB ~ ( ( 1 - tau2 ) * piB - piDB ) * ( 1 + gss ) / gss,
B ~ gDebtGDP * p * Y,
Bh ~ shareGDebtHH * B,
Bb ~ B - Bh,
Dh ~ L - Df + Bb - nwB,
spread ~ ibk - i,
tau1 ~ ( p * G - tau2 * ( piB + piN ) - B * ( gss - i ) / ( 1 + gss ) ) / ( w * Nf + piDF + piDB + i * Bh / ( 1 + gss ) ),
V ~ Dh + Bh,
beta ~ Dh / V,
alpha2 ~ ( p * C - alpha1 * ( 1 - tau1 ) * w * Nf ) * ( 1 + gss ) / V
)
external <- sfcr_set(
gk ~ lf$gk,
inf ~ lf$inf,
u ~ lf$u,
K ~ lf$K,
nu ~ lf$nu,
Nf ~ lf$Nf,
gamma ~ lf$gamma,
iota ~ lf$iota,
h ~ lf$h,
Gamma0 ~ lf$Gamma0,
lev ~ lf$lev,
Assets ~ lf$Assets,
r ~ lf$r,
theta ~ lf$theta,
nk ~ lf$nk,
ibk ~ lf$ibk,
lambda ~ lf$lambda,
tau2 ~ lf$tau2,
i ~ lf$i,
etab ~ lf$etab,
gDebtGDP ~ lf$gDebtGDP,
shareGDebtHH ~ lf$shareGDebtHH,
alpha1 ~ lf$alpha1
)
sim <- sfcr_baseline(
equations = eqs,
external = external,
periods = 2,
method = 'Broyden'
)
save( args, sim, file = '/home/italo/LSD/Work/model_jeec/Initial_Conditions/teste.RData' )
sim$alpha2
write.table( sim$alpha2[2], file = 'alpha2.txt ')
?sim$alpha2[2]
sim$alpha2[2]
?write.table
write.table( sim$alpha2[2], file = 'alpha2.txt', append = F, quote = F )
numeric(sim$alpha2[2])
as.numeric(sim$alpha2[2])
write.table( sim$alpha2[2], file = 'alpha2.txt', append = F, quote = F, col.names = F )
write.table( sim$alpha2[2], file = 'alpha2.txt', append = F, quote = F, col.names = F, row.names = F )
View(parameters)
